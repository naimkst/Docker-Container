version: "3.8"
networks:
  mynet:
    driver: bridge
services:
  #Nginx Service
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8080:8080"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - mynet
  #Nginx Service
  # nginx:
  #     image: nginx:stable-alpine
  #     container_name: nginx
  #     ports:
  #         - 8080:80
  #     volumes:
  #         - ./:/var/www/html
  #         - ./nginx/defautl.conf:/etc/nginx/conf.d/defautl.conf
  #     depends_on:
  #         - php
  #         - database
  #     networks:
  #         - laravel

  # PHP Service
  php:
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=app
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    ports:
      - 8000:8000
    depends_on:
      - database
      - redis

  # WebSocket Service
  # websocket:
  #     build:
  #         context: .
  #         target: php
  #         args:
  #             - APP_ENV=${APP_ENV}
  #     environment:
  #         - APP_ENV=${APP_ENV}
  #         - CONTAINER_ROLE=websocket
  #     working_dir: /var/www
  #     volumes:
  #         - ./:/var/www
  #     ports:
  #         - 6001:6001
  #     depends_on:
  #         - database
  #         - redis

  # Database Server
  database:
    image: mysql:8.0
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql

  # Redis Server
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass  "${REDIS_PASSWORD}"
    ports:
      - 6379:6379

  # Queue Service
  queue:
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=queue
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
  # Node Service
  node:
    build:
      context: .
      target: node
    volumes:
      - .:/usr/src
      - ./node_modules:/usr/src/node_modules
    tty: true
volumes:
  db-data: ~
